{"version":3,"sources":["components/jumbotron.js","components/card.js","app.js","index.js"],"names":["Jumbo","props","react_default","a","createElement","Jumbotron","className","Container","Row","Col","id","score","highScore","message","Card","value","onClick","handleClick","alt","character","src","image","shuffleArray","array","sort","Math","random","App","state","characters","currentScore","clicked","newShuffle","shuffledArray","_this","setState","indexOf","handleIncrement","concat","handleReset","newScore","_this2","this","components_jumbotron","Row_default","map","components_card","key","Component","ReactDOM","render","src_app","document","getElementById"],"mappings":"qVAyBeA,SArBD,SAAAC,GAAK,OACfC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,UACjBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWD,UAAU,WACjBJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAAA,MAAIM,GAAG,gBAAP,kBAAsCT,EAAMU,QAEhDT,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WAEJF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAAA,MAAIM,GAAG,aAAP,eAAgCT,EAAMW,aAG9CV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKF,UAAU,OAAMJ,EAAAC,EAAAC,cAAA,MAAIM,GAAG,WAAWT,EAAMY,qBCT1CC,SARF,SAAAb,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOS,MAAOd,EAAMS,GAAIM,QAAS,kBAAMf,EAAMgB,YAAYhB,EAAMS,MAC1ER,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACfJ,EAAAC,EAAAC,cAAA,OAAKc,IAAKjB,EAAMkB,UAAWC,IAAKnB,EAAMoB,6BCG1CC,EAAe,SAAAC,GAEjB,OADAA,EAAMC,KAAK,kBAAMC,KAAKC,SAAW,KAC1BH,GAgFMI,6MA3EbC,MAAQ,CACNC,aACAC,aAAc,EACdlB,UAAW,EACXC,QAAS,kCACTkB,QAAS,MAIXC,WAAa,WACX,IAAIC,EAAgBX,EAAaO,GACjCK,EAAKC,SAAS,CAAEN,WAAYI,OAG9BhB,YAAc,SAAAP,IAC4B,IAApCwB,EAAKN,MAAMG,QAAQK,QAAQ1B,IAC7BwB,EAAKG,kBACLH,EAAKC,SAAS,CAAEJ,QAASG,EAAKN,MAAMG,QAAQO,OAAO5B,MAEnDwB,EAAKK,iBAITF,gBAAkB,WAChB,IAAMG,EAAWN,EAAKN,MAAME,aAAe,EAC3CI,EAAKC,SAAS,CACZL,aAAcU,EACd3B,QAAS,2CAEP2B,GAAYN,EAAKN,MAAMhB,WACzBsB,EAAKC,SAAS,CAAEvB,UAAW4B,IAE7BN,EAAKF,gBAGPO,YAAc,WACZL,EAAKC,SAAS,CACZL,aAAc,EACdlB,UAAWsB,EAAKN,MAAMhB,UACtBC,QAAS,4CACTkB,QAAS,KAEXG,EAAKF,sFAGE,IAAAS,EAAAC,KACP,OAEExC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACuC,EAAD,CACEhC,MAAO+B,KAAKd,MAAME,aAClBlB,UAAW8B,KAAKd,MAAMhB,UACtBC,QAAS6B,KAAKd,MAAMf,UAGtBX,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAKG,UAAU,gBACVoC,KAAKd,MAAMC,WAAWgB,IAAI,SAAA1B,GAAS,OAC9BjB,EAAAC,EAAAC,cAAC0C,EAAD,CACEC,IAAK5B,EAAUT,GACfO,YAAawB,EAAKxB,YAClBoB,gBAAiBI,EAAKJ,gBACtBE,YAAaE,EAAKF,YAClBP,WAAYS,EAAKT,WACjBtB,GAAIS,EAAUT,GACdW,MAAOF,EAAUE,mBAnEnB2B,aCTlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5258fdf6.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Container, Jumbotron, Row } from 'react-bootstrap';\nimport './jumbotron.css';\n\nconst Jumbo = props => (\n    <Jumbotron className=\"jumbot\">\n        <Container className=\"contain\">\n            <Row>\n                <Col>\n                    <h4 id=\"currentScore\">Current Score: {props.score}</h4>\n                </Col>\n                <Col>\n                    <h1>Spaceballs!</h1>\n                    <h2>Memory Game</h2>\n                    <p></p>\n                </Col>\n                <Col>\n                    <h4 id=\"highScore\">High Score: {props.highScore}</h4>\n                </Col>\n            </Row>\n            <Row className=\"row\"><h4 id=\"message\">{props.message}</h4></Row>\n        </Container>\n    </Jumbotron>\n);\n    \nexport default Jumbo;","import React from \"react\";\nimport \"./card.css\";\n\nconst Card = props => (\n    <div className=\"card\" value={props.id} onClick={() => props.handleClick(props.id)}>\n        <div className=\"img-container\">\n        <img alt={props.character} src={props.image} />\n        </div>\n    </div>\n);\n\nexport default Card;","import React, { Component } from 'react';\nimport './app.css';\nimport './components/jumbotron';\nimport Jumbo from './components/jumbotron';\nimport characters from './characters.json';\nimport Card from './components/card';\nimport Row from 'react-bootstrap/Row';\n\n// Shuffle an array into a random order\nlet shuffleArray = array => {\n  array.sort(() => Math.random() - 0.5);\n  return array;\n};\n\nclass App extends Component {\n\n  state = {\n    characters,\n    currentScore: 0,\n    highScore: 0,\n    message: \"Click each pic only once or die\",\n    clicked: [],\n    \n  };\n\n  newShuffle = () => {\n    let shuffledArray = shuffleArray(characters);\n    this.setState({ characters: shuffledArray });\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      message: \"Nice. May the Schwartz be with you....\"\n    });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    } \n    this.newShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      highScore: this.state.highScore,\n      message: \"Be more careful next time, Major Asshole!\",\n      clicked: []\n    });\n    this.newShuffle();\n  };\n\n  render() {\n    return (\n      \n      <div>\n        \n        <Jumbo\n          score={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n          \n        <Row className=\"main-display\">\n            {this.state.characters.map(character => (\n                  <Card\n                    key={character.id}\n                    handleClick={this.handleClick}\n                    handleIncrement={this.handleIncrement}\n                    handleReset={this.handleReset}\n                    newShuffle={this.newShuffle}\n                    id={character.id}\n                    image={character.image}\n                  />\n              ))}\n        </Row >\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}